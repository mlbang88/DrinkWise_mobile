rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Règles pour la collection artifacts - structure principale de l'app
    match /artifacts/{appId} {
      // Collection des utilisateurs
      match /users/{userId} {
        match /profile/{document=**} {
          allow read, write: if request.auth != null && (
            request.auth.uid == userId ||
            (exists(/databases/$(database)/documents/artifacts/$(appId)/public_user_stats/$(userId)) &&
             request.auth.uid in get(/databases/$(database)/documents/artifacts/$(appId)/public_user_stats/$(userId)).data.friends)
          );
        }
      }

      // Stats publiques des utilisateurs
      match /public_user_stats/{userId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }

      // Collection des interactions du feed - RÈGLES CORRIGÉES
      match /feed_interactions/{interactionId} {
        // Lecture : tous les utilisateurs authentifiés
        allow read: if request.auth != null;
        
        // Création : l'utilisateur doit être l'auteur de l'interaction
        allow create: if request.auth != null 
          && request.auth.uid == request.resource.data.userId
          && request.resource.data.itemId != null
          && request.resource.data.type in ['like', 'comment', 'congratulate'];
        
        // Mise à jour : seulement par l'auteur
        allow update: if request.auth != null 
          && request.auth.uid == resource.data.userId;
        
        // Suppression : seulement par l'auteur
        allow delete: if request.auth != null 
          && request.auth.uid == resource.data.userId;
      }

      // Demandes d'amitié
      match /friend_requests/{requestId} {
        allow read: if request.auth != null && (
          request.auth.uid == resource.data.from ||
          request.auth.uid == resource.data.to
        );
        allow create: if request.auth != null && request.auth.uid == request.resource.data.from;
        allow update: if request.auth != null && request.auth.uid == resource.data.to;
      }

      // Autres collections
      match /{collection}/{document=**} {
        allow read, write: if request.auth != null;
      }
    }
  }
}