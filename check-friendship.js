const admin = require('firebase-admin');
const serviceAccount = require('./drinkwise-31d3a-firebase-adminsdk-pk8k6-96c86c8b84.json');

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = admin.firestore();
const appId = 'my-drinkwise-app';

async function checkFriendships() {
  console.log('üîç Recherche des liens d\'amiti√© Vinch/ML...\n');
  
  // 1. Chercher dans public_user_stats pour trouver les IDs
  console.log('=== √âTAPE 1: Identification des utilisateurs ===');
  const statsSnapshot = await db.collection(`artifacts/${appId}/public_user_stats`).get();
  
  let vinchId = null, mlId = null;
  
  statsSnapshot.docs.forEach(doc => {
    const data = doc.data();
    const username = data.username?.toLowerCase();
    
    console.log(`Utilisateur: ${data.username} (ID: ${doc.id})`);
    console.log(`  Amis: [${(data.friends || []).join(', ')}]`);
    
    if (username === 'vinch') {
      vinchId = doc.id;
      console.log('‚úÖ Vinch trouv√© - ID:', vinchId);
    }
    if (username === 'ml') {
      mlId = doc.id;
      console.log('‚úÖ ML trouv√© - ID:', mlId);
    }
    console.log('');
  });
  
  if (!vinchId || !mlId) {
    console.log('‚ùå Impossible de trouver les deux utilisateurs');
    return;
  }
  
  console.log('\n=== √âTAPE 2: V√©rification des profils priv√©s ===');
  
  // 2. V√©rifier les profils priv√©s
  try {
    const vinchProfile = await db.doc(`artifacts/${appId}/users/${vinchId}/profile/data`).get();
    if (vinchProfile.exists()) {
      console.log('üìã Profil priv√© Vinch - Amis:', vinchProfile.data().friends || []);
    } else {
      console.log('‚ö†Ô∏è Profil priv√© Vinch non trouv√©');
    }
  } catch (e) {
    console.log('‚ö†Ô∏è Erreur lecture profil Vinch:', e.message);
  }
  
  try {
    const mlProfile = await db.doc(`artifacts/${appId}/users/${mlId}/profile/data`).get();
    if (mlProfile.exists()) {
      console.log('üìã Profil priv√© ML - Amis:', mlProfile.data().friends || []);
    } else {
      console.log('‚ö†Ô∏è Profil priv√© ML non trouv√©');
    }
  } catch (e) {
    console.log('‚ö†Ô∏è Erreur lecture profil ML:', e.message);
  }
  
  console.log('\n=== √âTAPE 3: Historique des demandes d\'amiti√© ===');
  
  // 3. Chercher dans les demandes d'amiti√©
  const requestsSnapshot = await db.collection(`artifacts/${appId}/friend_requests`).get();
  
  let foundRequests = [];
  requestsSnapshot.docs.forEach(doc => {
    const data = doc.data();
    if ((data.from === vinchId && data.to === mlId) || 
        (data.from === mlId && data.to === vinchId)) {
      foundRequests.push({
        id: doc.id,
        from: data.from,
        to: data.to,
        status: data.status,
        timestamp: data.timestamp?.toDate()
      });
    }
  });
  
  if (foundRequests.length > 0) {
    foundRequests.forEach(req => {
      console.log('üì® Demande d\'amiti√© trouv√©e:', req);
    });
  } else {
    console.log('üîç Aucune demande d\'amiti√© trouv√©e entre Vinch et ML');
  }
  
  console.log('\n=== ANALYSE BIDIRECTIONNELLE ===');
  
  // Analyse de la bidirectionnalit√©
  const vinchStats = await db.doc(`artifacts/${appId}/public_user_stats/${vinchId}`).get();
  const mlStats = await db.doc(`artifacts/${appId}/public_user_stats/${mlId}`).get();
  
  const vinchFriends = vinchStats.exists() ? vinchStats.data().friends || [] : [];
  const mlFriends = mlStats.exists() ? mlStats.data().friends || [] : [];
  
  const vinchHasML = vinchFriends.includes(mlId);
  const mlHasVinch = mlFriends.includes(vinchId);
  
  console.log(`Vinch a ML comme ami: ${vinchHasML ? '‚úÖ' : '‚ùå'}`);
  console.log(`ML a Vinch comme ami: ${mlHasVinch ? '‚úÖ' : '‚ùå'}`);
  console.log(`Amiti√© bidirectionnelle: ${vinchHasML && mlHasVinch ? '‚úÖ OUI' : '‚ùå NON'}`);
  
  console.log('\n=== CHEMINS FIREBASE CONSOLE ===');
  console.log('Pour voir directement dans Firebase Console:');
  console.log('1. Stats publiques Vinch:', `artifacts/my-drinkwise-app/public_user_stats/${vinchId}`);
  console.log('2. Stats publiques ML:', `artifacts/my-drinkwise-app/public_user_stats/${mlId}`);
  console.log('3. Profil priv√© Vinch:', `artifacts/my-drinkwise-app/users/${vinchId}/profile/data`);
  console.log('4. Profil priv√© ML:', `artifacts/my-drinkwise-app/users/${mlId}/profile/data`);
  console.log('5. Demandes d\'amiti√©:', `artifacts/my-drinkwise-app/friend_requests`);
}

checkFriendships().catch(console.error);
